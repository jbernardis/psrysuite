latham.py:                      self.rr.AddHandswitchInd("LSw11", self, n, addr, [(1, 3)])
latham.py:                      self.rr.AddHandswitch("LSw11", self, n, addr, [(0, 0), (0, 1)])


latham.py:                      self.rr.AddHandswitchInd("LSw13", self, n, addr, [(1, 4)])
latham.py:                      self.rr.AddHandswitch("LSw13", self, n, addr, [(0, 2), (0, 3)])


dell.py:                        self.rr.AddHandswitchInd("DSw9", self, n, DELL, [(2, 2)])
dell.py:                        self.rr.AddHandswitch("DSw9", self, n, DELL, [(1, 0), (1, 1)])


shore.py:                       self.rr.AddHandswitchInd("SSw1", self, n, SHORE, [(4, 0)])
shore.py:                       self.rr.AddHandswitch("SSw1",  self, n, SHORE, [(0, 0), (0, 1)])


bank.py:                        self.rr.AddHandswitchInd("CSw21ab", self, n, addr, [(2, 3)], inverted=True)
bank.py:                        self.rr.AddHandswitch("CSw21a", self, n, addr, [(0, 2), (0, 3)])
bank.py:                        self.rr.AddHandswitch("CSw21b", self, n, addr, [(0, 4), (0, 5)])
cliff.py:                       self.rr.AddHandswitchInd("CSw21ab", self, n, addr, [(5, 0), (5, 1)])
cliff.py:                       self.rr.AddIndicator("CSw21a", self, n, addr, [(7, 0)])
cliff.py:                       self.rr.AddIndicator("CSw21b", self, n, addr, [(7, 1)])
cliff.py:                       self.rr.AddHandswitchUnlock("CSw21ab", self, n, addr, [(7, 0)])
reverse indicator??

bank.py:                        self.rr.AddHandswitchInd("CSw19",   self, n, addr, [(2, 4)], inverted=True)
bank.py:                        self.rr.AddHandswitch("CSw19",  self, n, addr, [(0, 6), (0, 7)])
cliff.py:                       self.rr.AddHandswitchInd("CSw19", self, n, addr, [(4, 6), (4, 7)])
cliff.py:                       self.rr.AddIndicator("CSw19",  self, n, addr, [(7, 2)])
cliff.py:                       self.rr.AddHandswitchUnlock("CSw19",   self, n, addr, [(6, 7)])
reverse indicator??


cliff.py:                       self.rr.AddHandswitchInd("CSw15", self, n, addr, [(4, 4), (4, 5)])
cliff.py:                       self.rr.AddIndicator("CSw15",  self, n, addr, [(7, 3)])
cliff.py:                       self.rr.AddHandswitchUnlock("CSw15",   self, n, addr, [(6, 6)])
shore.py:                       self.rr.AddHandswitchInd("CSw15", self, n, SHORE, [(6, 4)], inverted=True)
shore.py:                       self.rr.AddHandswitch("CSw15", self, n, SHORE, [(4, 2), (4, 3)])
reverse indicator??

cliff.py:                       self.rr.AddHandswitchInd("CSw11", self, n, addr, [(4, 2), (4, 3)])
cliff.py:                       self.rr.AddIndicator("CSw11",  self, n, addr, [(7, 4)])
cliff.py:                       self.rr.AddHandswitchUnlock("CSw11",   self, n, addr, [(6, 5)])
cliveden.py:                    self.rr.AddHandswitchInd("CSw11", self, n, addr, [(2, 6)])
cliveden.py:                    self.rr.AddHandswitch("CSw11", self, n, addr, [(0, 4), (0, 5)])
reverse indicator??


cliff.py:                       self.rr.AddHandswitchInd("CSw3", self, n, addr, [(2, 5)])
cliff.py:                       self.rr.AddHandswitch("CSw3", self, n, addr, [(1, 0), (1, 1)])
cliff.py:                       self.rr.AddHandswitchInd("CSw3",  self, n, addr, [(4, 0), (4, 1)])
cliff.py:                       self.rr.AddHandswitchUnlock("CSw3",    self, n, addr, [(6, 4)])
reverse indicator??

port.py:                        self.rr.AddHandswitchInd("PBSw5",  self, n, addr, [(3, 6), (3, 7)])
port.py:                        self.rr.AddHandswitchInd("PBSw5", self, n, addr, [(6, 0)])
port.py:                        self.rr.AddHandswitch("PBSw5",   self, n, addr, [(1, 0), (1, 1)])
port.py:                        self.rr.AddHandswitchUnlock("PBSw5",    self, n, addr, [(4, 3)])


port.py:                        self.rr.AddHandswitchInd("PBSw15ab",  self, n, addr, [(4, 6), (4, 7)])
port.py:                        self.rr.AddHandswitchInd("PBSw15ab",  self, n, addr, [(6, 3)])
port.py:                        self.rr.AddHandswitch("PBSw15a", self, n, addr, [(1, 2), (1, 3)])
port.py:                        self.rr.AddHandswitch("PBSw15b", self, n, addr, [(1, 4), (1, 5)])
port.py:                        self.rr.AddHandswitchUnlock("PBSw15ab",    self, n, addr, [(5, 2)])
